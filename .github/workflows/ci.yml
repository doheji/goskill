# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: go_skill_db
          POSTGRES_USER: root
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 1234:5432

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Set up swagger
        run: |
          go install github.com/swaggo/swag/cmd/swag@latest
          mv ${GOROOT}/bin/swag ./swag
          ./swag init

      - name: Install gomigrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.15.2/migrate.linux-386.tar.gz | tar xvz
          sudo mv migrate /usr/bin
          which migrate

      - name: Makemigrations
        run: make migrateup

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...